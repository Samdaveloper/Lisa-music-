import random
from pyrogram import Client
from pyrogram.types import Message
from pyrogram import filters
from pyrogram.types import(InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto, InputMediaVideo, Message)
from config import LOGGER_ID as LOG_GROUP_ID
from DAXXMUSIC import app  

photo = [
    "https://telegra.ph/file/c56fbe380ab8a1e1331f7.jpg",
    "https://telegra.ph/file/33e81ea80303222535029.jpg",
    "https://telegra.ph/file/47d4c3a58f6b807fdea4a.jpg",
    "https://telegra.ph/file/1466d484f1ecd8cdaa750.jpg",
    "https://telegra.ph/file/2073ab1c1e956f57b54d5.jpg",
]


@app.on_message(filters.new_chat_members, group=2)
async def join_watcher(_, message):    
    chat = message.chat
    link = await app.export_chat_invite_link(message.chat.id)
    for members in message.new_chat_members:
        if members.id == app.id:
            count = await app.get_chat_members_count(chat.id)

            msg = (
                f"‚òºÔ∏é  ô·¥è·¥õ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …™…¥ ·¥Ä #NEW_GROUP ‚òºÔ∏é\n\n"
                f"‚öä‚öä‚öä‚öä‚öä‚öä‚ú¨‚ú•‚ú¨‚öä‚öä‚öä‚öä‚öä‚öä‚öä‚öä‚ú¨‚ú•‚ú¨‚öä‚öä‚öä‚öä‚öä‚öä\n\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ {message.chat.title}\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò …™·¥Ö ‚ãÜ ‚û∫ {message.chat.id}\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ @{message.chat.username}\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò  ü…™…¥·¥ã ‚ãÜ ‚û∫[ ô·¥Ä ô è ·¥õ·¥è·¥ú·¥Ñ ú]({link})\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á·¥ç ô·¥á Äs ‚ãÜ ‚û∫ {count}\n"
                f"‚òºÔ∏é ·¥Ä·¥Ö·¥Ö·¥á·¥Ö  ô è ‚ãÜ ‚û∫ {message.from_user.mention}"
            )
            await app.send_photo(LOG_GROUP_ID, photo=random.choice(photo), caption=msg, reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton(f"‚òºÔ∏é s·¥á·¥á  ô·¥è·¥õ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …¢ Ä·¥è·¥ú·¥ò ‚òºÔ∏é", url=f"{link}")]
         ]))



@app.on_message(filters.left_chat_member)
async def on_left_chat_member(_, message: Message):
    if (await app.get_me()).id == message.left_chat_member.id:
        remove_by = message.from_user.mention if message.from_user else "‚òºÔ∏é ·¥ú…¥·¥ã…¥·¥è·¥°…¥ ·¥ús·¥á Ä ‚òºÔ∏é"
        title = message.chat.title
        username = f"@{message.chat.username}" if message.chat.username else "‚òºÔ∏é ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä·¥õ ‚òºÔ∏é"
        chat_id = message.chat.id
        left = f"‚úµ <b><u>#LEFT_GROUP</u></b> ‚úµ\n\n‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ {title}\n\n‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò …™·¥Ö ‚ãÜ ‚û∫ {chat_id}\n\n‚òºÔ∏é  ô·¥è·¥õ  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö  ô è ‚ãÜ ‚û∫ {remove_by}\n\n‚òºÔ∏é  ô·¥è·¥õ …¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ @{app.username}"
        await app.send_photo(LOG_GROUP_ID, photo=random.choice(photo), caption=left)

#welcome

@app.on_message(filters.new_chat_members, group=3)
async def _greet(_, message):    
    chat = message.chat
    
    for member in message.new_chat_members:
        
            count = await app.get_chat_members_count(chat.id)

            msg = (
                f"üå∑ @{member.username} ‚òºÔ∏é ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥õ ú·¥á …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò ‚òºÔ∏é\n\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò …¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ {message.chat.title}\n"
                f"‚òºÔ∏é …¢ Ä·¥è·¥ú·¥ò ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ @{message.chat.username}\n"
                f"‚òºÔ∏é  è·¥è·¥ú Ä …™·¥Ö ‚ãÜ ‚û∫ {member.id}\n"
                f"‚òºÔ∏é  è·¥è·¥ú Ä ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á ‚ãÜ ‚û∫ @{member.username}\n"
                f"‚òºÔ∏é ·¥Ñ·¥è·¥ç·¥ò ü·¥á·¥õ·¥á·¥Ö ·¥õ·¥è·¥õ·¥á ü {count} ·¥ç·¥á·¥ç ô·¥á Äs ‚òºÔ∏é"
            )
            await app.send_photo(message.chat.id, photo=random.choice(photo), caption=msg, reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton(f"‚òºÔ∏é ·¥Ä·¥Ö·¥Ö ·¥õ·¥è ·¥ç·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‚òºÔ∏é", url=f"https://t.me/{app.username}?startgroup=true")]
         ]))

#tagall
